:root {
  --primary-color: #3D6EF7;
  --secondary-color: #6c757d;
  --purple: #6f42c1;
  --blue: #3881c5;
  --white: #fff;
  --orange: #FF6651;
  --red: #dc3545;
  --pink: #e83e8c;
  --teal: #28c997;
  --yellow: #ffc107;
  --green: #28a745;
  --success: #28a745;
  --info: #17a2b8;
  --wraning: #ffc107;
  --danger: #dc3545;
  --dark: #343a40;
  --light: #f8f9fa;
  --greenyellow: #ADFF2F;
}

html {
  box-sizing: border-box;
  font-size: 62.5%
}

* {
  margin: 0;
  padding: 0;
}

*,
*:before,
*:after {
  box-sizing: border-box;
}

input,
textarea,
select,
button {
  outline: none;
}

input {
  line-height: normal;
}

label,
button {
  cursor: pointer;
}

a {
  text-decoration: none;
}

img {
  display: block;
  max-width: 100%;
}

/* .images {
  width: 100%;
  height: 100vh;
  object-fit: cover;
} */

/* Hình nền với linear-gradient và chữ với linear-gradient */
/* .box-gradient {
  width: 20rem;
  height: 20rem;
  background-image: linear-gradient(to left top, #3D6EF7, #FF6651);
}
*/

/* Khi trình duyệt không hỗ trợ thuộc tính  -webkit-background-clip: text;*/
/* color: #3D6EF7; */
/* .title {
  margin-top: 2rem;
  margin-left: 2rem;
  font-size: 7.2rem;
  font-weight: normal;
  display: inline-block;
} */


/* Khi trình duyệt hỗ trợ thuộc tính thì ta sử dụng @support */
/* @supports (-webkit-background-clip: text) {
  .title {
    color: transparent;
    background-clip: text;
    -webkit-background-clip: text;
    background-image: linear-gradient(90deg, rgba(131, 58, 180, 1) 0%, rgba(253, 29, 29, 1) 50%, rgba(252, 176, 69, 1) 100%);
  }
} */

/* Khi trình duyệt không hỗ trợ thì thêm @support not và thay đổi thuộc tính mà mình muốn lại ở trên className gốc*/
/* @supports not (-webkit-background-clip: text) {
  .title {
    color: transparent;
    background-clip: text;
    -webkit-background-clip: text;
    background-image: linear-gradient(90deg, rgba(131, 58, 180, 1) 0%, rgba(253, 29, 29, 1) 50%, rgba(252, 176, 69, 1) 100%);
  }
} */

/* Hiển thị 2 hình nèn vởi linear-gradient */
/* .background {
  width: 100vw;
  height: 100vh;
  background-image: linear-gradient(to right, rgba(33, 147, 176, 0.5), rgba(109, 213, 237, 0.63)),
    url("./images/poster_1.jpg");
  background-position: center center;
  background-repeat: no-repeat;
  object-fit: cover;
  background-size: cover;
} */

/* Opacity:0, visibility: hidden, display:none */
/* 
  + Opacity có giá trị chạy từ 0 đến 1 -> vẫn chiếm diện tích có thế nhấn vào được
  +visibility: hidden ->vẫn chiếm diện tích nhưng không thể nhấn vào được
  =>Opacity và visibility: thường được sử dụng để làm hiệu ứng vì chùng sử dụng được transition
  + display: không chiếm diện tích và cũng không nhấn vào được, ít sử dụng vì không hỗ trợ thuộc tính transition
  */
/* .box {
  width: 20rem;
  height: 20rem;
  background-image: linear-gradient(to left top, #3D6EF7, #FF6651);
  cursor: pointer;
  opacity: 0;
  visibility: hidden;
  display: none;
} 
*/

/* .box-shadow {
  width: 20rem;
  height: 20rem;
  margin: 5rem auto;
  background-color: var(--pink);
  border-radius: 0.5rem;
  box-shadow: rgba(240, 46, 170, 0.4) -5px 5px,
    rgba(240, 46, 170, 0.3) -10px 10px,
    rgba(240, 46, 170, 0.2) -15px 15px,
    rgba(240, 46, 170, 0.1) -20px 20px,
    rgba(240, 46, 170, 0.05) -25px 25px;
}

.text-shadow {
  font-size: 5rem;
  font-weight: bold;
  line-height: inherit;
  color: #202c2d;
  background: #FFFFFF;
  text-shadow: 0 1px #808d93,
    -1px 0 #cdd2d5,
    -1px 2px #808d93,
    -2px 1px #cdd2d5,
    -2px 3px #808d93,
    -3px 2px #cdd2d5,
    -3px 4px #808d93,
    -4px 3px #cdd2d5,
    -4px 5px #808d93,
    -5px 4px #cdd2d5,
    -5px 6px #808d93,
    -6px 5px #cdd2d5,
    -6px 7px #808d93,
    -7px 6px #cdd2d5,
    -7px 8px #808d93,
    -8px 7px #cdd2d5;
} */

/* Độ ưu tiên là tags < class vs attribute < id < inline < !importants */

/* #name {
  color: var(--dark)
}

.name {
  font-size: 5rem;
  color: var(--primary-color);
  font-weight: bold;
  line-height: inherit;
} */

/* Trường hợp này h2#name sẽ được ưu tiên cao hơn dù cho có trùng Id những css sẽ duyệt code từ dưới lên trên

h2#name{
  color: var(--danger);
}

*/


/* Cách tính độ ưu tiên theo vscode
  CSS sẽ ưu tiên code từ dưới lên trên
  Khi bạn rê chuột vào chỗ cần xét độ ưu tiên
  => (x,y,z) | ( id, class vs attribute, tags)
  Example:
  + h2 (0,0,1)
  + .name(0,1,0)
  + #name(1,0,0)
  0 0 1
  0 1 0
  1 0 0 
  1 sẽ độ ưu tiên cao hơn 0
*/


/* li {
  font-size: 5rem;
  color: var(--dark);
  font-weight: bold;
} */

/* Lấy item ở vị trí dầu */
/* li:first-child {
  color: var(--danger);
} */

/* Lấy item ở vị trí cuối */
/* li:last-child {
  color: var(--green)
} */

/* Lấy item ở vị trí thứ 2 */
/* li:nth-child(2) {
  color: var(--purple)
} */

/* Lấy item ở vị trí thứ 3 */
/* li:nth-child(3) {
  color: var(--info)
} */

/* Lấy item ở vị trí kế cuối */
/* li:nth-last-child(2) {
  color: var(--orange)
} */

/* Lấy tất cả trừ item ở vị trí đầu */
/* li:not(:first-child) {
  color: var(--green)
} */

/* Lấy tất cả trừ item ở vị trí cuối */
/* li:not(:last-child) {
  color: var(--danger)
} */

/* Lấy ra item ở vị trí chẵn */
/* li:nth-child(odd) {
  color: var(--greenyellow)
} */

/* Lấy ra item ở vị trí lẻ */
/* li:nth-child(even) {
  color: var(--secondary)
} */

/* Lấy ra item theo giá trị truyền vào */
/* li:nth-child(2n+2) {
  color: var(--pink)
} */

/* Type selector */
/* li {
  font-size: 5rem;
  color: var(--dark);
  font-weight: bold;
}

p {
  font-size: 5rem;
  color: var(--dark);
  font-weight: bold;
  line-height: inherit;
} */


/* li:nth-child(odd) span {
  color: var(--greenyellow);
} */

/* p:not(:first-of-type) {
  color: var(--yellow);
}

li:nth-of-type(odd) {
  color: var(--danger);
}


li:nth-last-of-type(2) {
  color: var(--greenyellow)
}

li:not(:last-of-type) {
  color: var(--primary-color)
} */

/* Combination trong CSS 
  Dấu (+): dùng để liên kết 2 tags nằm cùng cấp và liền kề nhau
  Dấu (~): Dùng để liên kết tags nằm cùng cấp với nhau nhưng không nhất thiết phải liền kề
*/
/* h2+.desc {
  font-size: 5rem;
  color: var(--danger);
  font-weight: normal;
  line-height: inherit;

}

h2~p {
  color: var(--greenyellow);
  font-size: 3rem;
  font-weight: normal;
  line-height: inherit;
} */

/* Css selector nâng cao*/

/* 
=> Style cho chữ cái đầu tiên: <tags>::first-letter
=> Style cho mọi phần tử <a> có giá trị thuộc tính bắt đầu bằng "https": a[attribute ^= value]
=> Style cho mọi phần tử <a> có giá trị thuộc tính kết thúc bằng ".pdf": a[attribute $= value]
=> Style cho mọi phần tử có chứa ký tự www: a[attribute *= value]
=> Style cho chính xác toàn bộ thẻ <div> có thuộc tính : [attribute = value]
=> Style cho chữ đầu tiên của mọi phần tử <p>: ::first-letter
=> Style cho dòng đầu tiên của mọi phần tử <p>: ::first-line
=> 
*/
/* a {
  font-size: 2rem;
  display: block;
  font-weight: normal;
  line-height: inherit;
}

p {
  font-size: 2rem;
  font-weight: normal;
  line-height: inherit;
}

a[href^="https"] {
  color: var(--greenyellow);
}

a[href$=".pdf"] {
  color: var(--wraning);
}

a[href*="www"] {
  color: var(--danger)
}

div[data-title="value"] {
  color: var(--blue);
  font-size: 3rem;
  font-weight: normal;
  line-height: inherit;
}

p::first-letter {
  color: var(--danger);
  font-size: 4rem;
}

p::first-line {
  color: #28c997;
} */

/* Transition: không áp dụng cho display: none và display: block */
/* Nếu sử dụng thuộc tính display: none thì nên sử dụng 1 thẻ <div> bọc ở bên ngoài và trỏ tới box đó style =>  display: inline-block  */
.boxed {
  width: 10rem;
  height: 10rem;
  opacity: 0;
  background-color: #17a2b8;
  transition: all 0.2s ease-in-out;
}

.boxed:hover {
  color: var(--yellow);
  background-color: var(--danger);
  width: 20rem;
  height: 20rem;
  opacity: 1;
  font-size: 2rem;
  font-weight: normal;
  line-height: inherit;
}